# Production Environment Configuration
# Copy this file to .env.production and update values for your production deployment

# Backend Configuration
ASPNETCORE_ENVIRONMENT=Production
CONNECTION_STRING=Host=YOUR_EXTERNAL_POSTGRES_HOST;Port=5432;Database=garmin_challenge;Username=garmin_user;Password=CHANGE_THIS_SECURE_PASSWORD

# External PostgreSQL Configuration
# Remove these if using external PostgreSQL - they're no longer needed for Docker container
# POSTGRES_CONTAINER_NAME=garmin-challenge-postgres
# POSTGRES_DB=garmin_challenge
# POSTGRES_USER=garmin_user
# POSTGRES_PASSWORD=CHANGE_THIS_SECURE_PASSWORD

# Authentication & Security - CHANGE THESE IN PRODUCTION!
JWT_KEY=CHANGE_THIS_TO_A_SECURE_64_CHARACTER_JWT_KEY_FOR_PRODUCTION_USE
AUTH_SALT=CHANGE_THIS_SECURE_SALT_FOR_PRODUCTION!

# CORS Configuration - Update with your production domains
FRONTEND_ORIGIN_0=https://your-domain.com
FRONTEND_ORIGIN_1=https://www.your-domain.com
FRONTEND_ORIGIN_2=https://app.your-domain.com

# Logging Configuration
LOG_LEVEL_DEFAULT=Warning
LOG_LEVEL_ASPNETCORE=Warning

# Frontend Configuration - Update with your production API URL
VITE_APP_API_ENDPOINT=https://api.your-domain.com
VITE_INTERNAL_API_URL=http://backend:8080

# Port Configuration (internal docker ports)
BACKEND_PORT=8080
FRONTEND_PORT=80

# Docker Container Names
BACKEND_CONTAINER_NAME=garmin-challenge-backend
FRONTEND_CONTAINER_NAME=garmin-challenge-frontend