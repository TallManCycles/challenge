services:
  postgres:
    image: postgres:16
    container_name: ${POSTGRES_CONTAINER_NAME:-garmin-challenge-postgres}
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-garmin_challenge}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - challenge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER_NAME}
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - Auth__JwtKey=${JWT_KEY}
      - Auth__Salt=${AUTH_SALT}
      - Frontend__AllowedOrigins__0=${FRONTEND_ORIGIN_0}
      - Frontend__AllowedOrigins__1=${FRONTEND_ORIGIN_1}
      - Frontend__AllowedOrigins__2=${FRONTEND_ORIGIN_2}
      - Logging__LogLevel__Default=${LOG_LEVEL_DEFAULT}
      - Logging__LogLevel__Microsoft_AspNetCore=${LOG_LEVEL_ASPNETCORE}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - challenge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_APP_API_ENDPOINT: ${VITE_APP_API_ENDPOINT}
    container_name: ${FRONTEND_CONTAINER_NAME}
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    environment:
      - VITE_APP_API_ENDPOINT=${VITE_APP_API_ENDPOINT}
    networks:
      - challenge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:

networks:
  challenge-network:
    driver: bridge