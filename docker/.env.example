# Environment Configuration
# Copy this file to .env and update values for your deployment

# Docker Image Versions (for versioned deployment)
# Update these to use specific versions of your images instead of building locally
BACKEND_IMAGE=ghcr.io/tallmancycles/challenge/backend:1.0
FRONTEND_IMAGE=ghcr.io/tallmancycles/challenge/frontend:1.0

# Backend Configuration
ASPNETCORE_ENVIRONMENT=Development
BACKEND_CONTAINER_NAME=challenge-backend
BACKEND_PORT=8080

# PostgreSQL Configuration
# For local PostgreSQL deployment (deploy-fullstack.bat):
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=garmin_challenge
POSTGRES_USER=postgres
POSTGRES_PASSWORD=
POSTGRES_CONTAINER_NAME=garmin-challenge-postgres

# For external PostgreSQL, update these values:
# POSTGRES_HOST=your-external-postgres-host.com
# POSTGRES_PORT=5432
# POSTGRES_DB=garmin_challenge
# POSTGRES_USER=your_username
# POSTGRES_PASSWORD=

# Authentication & Security
JWT_KEY=LocalDevelopmentKey123456789012345678901234567890
AUTH_SALT=LocalDevSalt123!

# CORS Configuration
FRONTEND_ORIGIN_0=http://localhost:5173
FRONTEND_ORIGIN_1=http://localhost:3000
FRONTEND_ORIGIN_2=http://frontend:80

# Logging Configuration
LOG_LEVEL_DEFAULT=Information
LOG_LEVEL_ASPNETCORE=Information

# Frontend Configuration (if using with frontend)
VITE_APP_API_ENDPOINT=http://localhost:8080
FRONTEND_CONTAINER_NAME=challenge-frontend
FRONTEND_PORT=80

# AWS SES Email Configuration (for production)
# Leave empty to use mock email service in development
AWS_REGION=us-east-1
AWS_ACCESS_KEY=
AWS_SECRET_KEY=
EMAIL_FROM_ADDRESS=noreply@yourdomain.com

# Garmin OAuth Configuration (optional)
GARMINOAUTH_CONSUMER_KEY=
GARMINOAUTH_CONSUMER_SECRET=
GARMINOAUTH_CALLBACK_URL=
GARMINOAUTH_REDIRECT_URL=