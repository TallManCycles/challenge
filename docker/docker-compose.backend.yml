services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER_NAME:-challenge-backend}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__DefaultConnection=Host=${POSTGRES_HOST:-localhost};Port=${POSTGRES_PORT:-5432};Database=${POSTGRES_DB:-garmin_challenge};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres}
      - Auth__JwtKey=${JWT_KEY:-LocalDevelopmentKey123456789012345678901234567890}
      - Auth__Salt=${AUTH_SALT:-LocalDevSalt123!}
      - Frontend__AllowedOrigins__0=${FRONTEND_ORIGIN_0:-http://localhost:5173}
      - Frontend__AllowedOrigins__1=${FRONTEND_ORIGIN_1:-http://localhost:3000}
      - Frontend__AllowedOrigins__2=${FRONTEND_ORIGIN_2:-http://localhost:80}
      - Logging__LogLevel__Default=${LOG_LEVEL_DEFAULT:-Information}
      - Logging__LogLevel__Microsoft_AspNetCore=${LOG_LEVEL_ASPNETCORE:-Information}
      - AWS__Region=${AWS_REGION:-us-east-1}
      - AWS__AccessKey=${AWS_ACCESS_KEY}
      - AWS__SecretKey=${AWS_SECRET_KEY}
      - Email__FromAddress=${EMAIL_FROM_ADDRESS}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s