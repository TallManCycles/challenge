services:
  postgres:
    image: postgres:16
    # --- CHANGE: Added a default container name for consistency. ---
    container_name: ${POSTGRES_CONTAINER_NAME:-garmin-challenge-postgres}
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-garmin_challenge}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      # The host port (left) maps to the container's internal port (right, 5432).
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      # --- CHANGE: Used the default-aware variable in the health check. ---
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  backend:
    # Use versioned Docker image from GitHub Container Registry
    image: ${BACKEND_IMAGE:-ghcr.io/tallmancycles/challenge/backend:master-b357048}
    container_name: ${BACKEND_CONTAINER_NAME:-garmin-challenge-backend}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB:-garmin_challenge};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD}
      - Auth__JwtKey=${JWT_KEY}
      - Auth__Salt=${AUTH_SALT}
      - Frontend__AllowedOrigins__0=${FRONTEND_ORIGIN_0}
      - Frontend__AllowedOrigins__1=${FRONTEND_ORIGIN_1}
      - Logging__LogLevel__Default=Warning
      - Logging__LogLevel__Microsoft_AspNetCore=Warning
      - GarminOAuth__ConsumerKey=${GARMINOAUTH_CONSUMER_KEY}
      - GarminOAuth__ConsumerSecret=${GARMINOAUTH_CONSUMER_SECRET}
      - GarminOAuth__CallbackUrl=${GARMINOAUTH_CALLBACK_URL}
      - GarminOAuth__RedirectUrl=${GARMINOAUTH_REDIRECT_URL}
      - AWS__Region=${AWS_REGION:-us-east-1}
      - AWS__AccessKey=${AWS_ACCESS_KEY}
      - AWS__SecretKey=${AWS_SECRET_KEY}
      - Email__FromAddress=${EMAIL_FROM_ADDRESS}
      - GarminDailyFetch__RunOnStartup=${GARMIN_DAILY_FETCH_RUN_ON_STARTUP:-true}
      - FitFileUpload__SecretKey=${UPLOAD_SECRET_KEY}
    volumes:
      - backend_logs:/app/logs
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    # Use versioned Docker image from GitHub Container Registry
    image: ${FRONTEND_IMAGE:-ghcr.io/tallmancycles/challenge/frontend:master-e5878ad}
    container_name: ${FRONTEND_CONTAINER_NAME:-garmin-challenge-frontend}
    environment:
      - VITE_APP_API_ENDPOINT=${VITE_APP_API_ENDPOINT:-http://localhost:8080}
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
  backend_logs:
