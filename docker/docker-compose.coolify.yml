services:
  postgres:
    image: postgres:16
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      # --- CHANGE: Removed default password for security. ---
      # This variable MUST be set in your .env file.
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER_NAME:-garmin-challenge-backend}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      # --- CHANGE: Enforced required variables to prevent running with empty secrets. ---
      # These variables MUST be set in your .env file.
      - ConnectionStrings__DefaultConnection=Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - Auth__JwtKey=${JWT_KEY}
      - Auth__Salt=${AUTH_SALT}
      # Allowed origins for production. Set these in your .env file.
      - Frontend__AllowedOrigins__0=${FRONTEND_ORIGIN_0}
      - Frontend__AllowedOrigins__1=${FRONTEND_ORIGIN_1} # This one is optional
      - Logging__LogLevel__Default=Warning
      - Logging__LogLevel__Microsoft_AspNetCore=Warning
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # This build-time argument correctly sets the backend URL for the frontend app.
        # For a production deployment, this MUST be the public URL of your backend API.
        # The default 'http://localhost:8080' is only suitable for local testing.
        VITE_APP_API_ENDPOINT: ${VITE_APP_API_ENDPOINT:-http://localhost:8080}
    container_name: ${FRONTEND_CONTAINER_NAME:-garmin-challenge-frontend}
    ports:
      - "${FRONTEND_PORT}:80"
    # --- CHANGE: Removed redundant 'environment' section. ---
    # Runtime environment variables are not read by the static files in the Nginx container.
    # The 'build.args' above is the correct mechanism.
    depends_on:
      # --- CHANGE: Wait for the backend to be healthy, not just started. ---
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data: